org: YOUR_SERVERLESS_ORG_HERE
app: my-app
service: my-app
frameworkVersion: "3"

custom:
  fullstack:
    # domain: my-custom-domain.com
    # certificate: arn:aws:acm:us-east-1:...     # The ARN for the SSL cert to use form AWS CertificateManager
    bucketName: test-react-app # Unique name for the S3 bucket to host the client assets
    distributionFolder: build # Path to the client assets to be uploaded to S3
    indexDocument: index.html # The index document to use
    singlePageApp: false # If true 403 errors will be rerouted (missing assets) to your root index document to support single page apps like React and Angular where the js framework handles routing
    invalidationPaths: # Custom invalidationPaths for cloudfront in case your frontend framework uses filename hashing
      - /index.html
    compressWebContent:
      true # Use compression when serving web content
      # apiGatewayRestApiId: a12bc34df5            # If "Api Gateway Rest Api" is not part of the same serverless template, you can set your API id here
    clientCommand: npm run build # Command to generate the client assets. Defaults to doing nothing
    priceClass: PriceClass_100
    noConfirm: true # Alternative to --no-confirm flag. Use this parameter if you do not want a confirmation prompt to interrupt automated builds.

provider:
  name: aws
  runtime: nodejs14.x
  stage: staging
  environment:
    REACT_APP_API_URL: YOUR_STAGING_API_GATEWAY_HERE
    REACT_APP_TOKEN_SECRET: YOUR_SECRET_TOKEN_HERE

plugins:
  - serverless-api-cloudfront
